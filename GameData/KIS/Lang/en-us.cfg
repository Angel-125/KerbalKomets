// Version: 6
// Do NOT change the version unless a new string is added or an existing one was deleted.
// A simple string update is not a new version! The version number is used to keep all
// the localizations in sync. The EN-US localization file is the primary file, and all the
// other languages should catch-up as the version is increasing.
// Last updated: 02/01/2019
// Authors: KospY, IgorZ, Supercheese, rfelipe200
Localization
{
	en-us
	{

		// ********** Part: KIS.basketball

		#KIS_basketball_Part_title = Basket Ball
		#KIS_basketball_Part_manufacturer = Kerbal Inventory Systems
		#KIS_basketball_Part_description = A great tool for studying gravity. Even in microgravity, Newton's Third Law can still be explored. Jeb claims he found this ball when he was mysteriously transported to a planet called Moron Mountain. Mission Control insists that they have no knowledge of such a mission, but Jeb is adamant that he was teleported through Space when his communications were Jammed. When asked for more details, he always refuses, saying he, 'promised Mike he'd keep it a secret'. Nobody knows what he's talking about.
		#KIS_basketball_Part_tags = cck-eva-items

		// ********** Part: KIS.beer

		#KIS_beer_Part_title = Bub's Beer
		#KIS_beer_Part_manufacturer = Kerbal Inventory Systems
		#KIS_beer_Part_description = A tasty and affordable beer. Every space agency manager should keep a healthy supply on hand to ensure robust crew motivation and high morale.
		#KIS_beer_Part_tags = cck-eva-items
		#KIS_beer_Part_useName = Drink

		// ********** Part: KIS.bomb1

		#KIS_bomb1_Part_title = K4 Standard Explosives
		#KIS_bomb1_Part_manufacturer = Kerbal Inventory Systems
		#KIS_bomb1_Part_description = Who would want to take a bomb aboard a spaceship? You'd have to be completely mad! Nonetheless, our trained pilots and engineers are capable of using this explosive device to dispose of unnecessary parts or de-orbit a satellite. Keep in mind that there is a limited time to reach a safe distance before it explodes! Monthly training sessions are held to ensure our crew are well aware of all relevant safety regulations.
		#KIS_bomb1_Part_tags = KIS EVA portable tool destruction bomb cck-eva-items

		// ********** Part: kis.concreteBase1

		#kis_concreteBase1_Part_title = CB1 Ground Base
		#kis_concreteBase1_Part_manufacturer = Kerbal Inventory Systems
		#kis_concreteBase1_Part_description = Have you ever needed to fasten something to the surface of a celestial body? We can make that work. Meet the concrete block! The CB1 is our variation on the classic block design that has been trusted by construction engineers for centuries: a sturdy base that can be fixed to the ground even without tools. Of course, attaching other parts onto the block will require tools, which are sold separately.
		#kis_concreteBase1_Part_tags = KIS EVA portable building construction concrete cck-eva-items

		// ********** Part: KIS.Container1

		#KIS_Container1_Part_title = SC-62 Portable Container
		#KIS_Container1_Part_manufacturer = Kerbal Inventory Systems
		#KIS_Container1_Part_description = This external container for tools, snacks, and more was designed specifically for the Mun mission. Two days before launch, the ground crew discovered that there was no more room for Valentina's favorite koffee mug. This put the entire mission at risk! Our engineers were thankfully able to solve the problem by attaching an ordinary hiking backpack reinforced with aluminum tubing to the exterior of the ship. Crews liked this design so much that these container-backpacks are now mass-produced.
		#KIS_Container1_Part_tags = KIS container inventory portable cck-containers

		// ********** Part: KIS.Container2

		#KIS_Container2_Part_title = ILC-18k Container
		#KIS_Container2_Part_manufacturer = Kerbal Inventory Systems
		#KIS_Container2_Part_description = Sometimes missions require stuff. And things. Lots of stuff & things. Sometimes you run out of places to stuff your stuff, so you need more things in which to put your things. As such, here is the ILC-18k, a larger container in which to stuff your things.
		#KIS_Container2_Part_tags = KIS container inventory cck-containers

		// ********** Part: KIS.Container3

		#KIS_Container3_Part_title = ISC-6K Container
		#KIS_Container3_Part_manufacturer = Kerbal Inventory Systems
		#KIS_Container3_Part_description = The SC-62 portable container-backpack was a huge success, but there were some shortcomings, like the fact that it cannot be accessed from inside the ship. To solve this problem, a full-fledged container module was developed. Due to the need to maintain a constant pressure inside the module, its size and cost have increased.
		#KIS_Container3_Part_tags = KIS container inventory cck-containers

		// ********** Part: KIS.Container4

		#KIS_Container4_Part_title = ImC-1500 Container
		#KIS_Container4_Part_manufacturer = Kerbal Inventory Systems
		#KIS_Container4_Part_description = Three engineers at a party grab some cans of beer. After consuming several, they decide they're the perfect design for a new, compact cargo module. Thus the Inline Mini-Container 1500 was born, suitable for long-distance delivery of parts and snacks alike (refrigerated compartment sold separately). Use responsibly.
		#KIS_Container4_Part_tags = cck-containers KIS container inventory

		// ********** Part: KIS.Container5

		#KIS_Container5_Part_title = IGC-25K Container
		#KIS_Container5_Part_manufacturer = Kerbal Inventory Systems
		#KIS_Container5_Part_description = A humongous container (that was definitely not salvaged from a KEDEX cargo plane) specially designed for long-term resupply missions or intercontinental shipping. Warranty void if refurbished and used as a pay-phone booth.
		#KIS_Container5_Part_tags = cck-containers KIS container inventory

		// ********** Part: KIS.Container6

		#KIS_Container6_Part_title = IMiC-800 Container
		#KIS_Container6_Part_manufacturer = Kerbal Inventory Systems
		#KIS_Container6_Part_description = The smallest member of the Inline family, the Inline Micro Container 800 is for when you need to bring along some snacks or sundries, but you don't want to have to put on an EVA suit to grab them.
		#KIS_Container6_Part_tags = cck-containers KIS container inventory

		// ********** Part: KIS.Container7

		#KIS_Container7_Part_title = IMC-15K Container
		#KIS_Container7_Part_manufacturer = Kerbal Inventory Systems
		#KIS_Container7_Part_description = A smaller container that was developed when the engineering team accidentally cut the IGC-25K in half. Warranty void if stacked with another IMC-15K unit.
		#KIS_Container7_Part_tags = cck-containers KIS container inventory

		// ********** Part: KIS.Container8

		#KIS_Container8_Part_title = IWC-4500 "Wyvern"
		#KIS_Container8_Part_manufacturer = Kerbal Inventory Systems
		#KIS_Container8_Part_description = The IWC-4500 "Wyvern" Container is specifically designed for when you can't decide whether the food is enough for the trip to Duna or you should take more snacks just in case. Warranty void if used alongside any container outside the KIS containers family (sold separately).
		#KIS_Container8_Part_tags = cck-containers KIS container inventory

		// ********** Part: KIS.ContainerMount1

		#KIS_ContainerMount1_Part_title = SM-62 Container Mount
		#KIS_ContainerMount1_Part_manufacturer = Kerbal Inventory Systems
		#KIS_ContainerMount1_Part_description = This simple mounting system allows you to attach a SC-62 container-backpack. Wehrner von Kerman personally adjusts each mount before launch - that is why there have never been any failures, and all of them safely reach orbit. Warranty void if installed on Wehrner's day off.
		#KIS_ContainerMount1_Part_tags = KIS EVA building portable container cck-containers

		// ********** Part: KIS.electricScrewdriver

		#KIS_electricScrewdriver_Part_title = E-SD80 Electric Screwdriver
		#KIS_electricScrewdriver_Part_manufacturer = Kerbal Inventory Systems
		#KIS_electricScrewdriver_Part_description = Some folks were not entirely satisfied with our previous product, the wrench. Jeb, in particular, complained: "This isn't what I wanted! What's next, a screwdriver!?". Again, our engineers took this report very seriously. After a year of R&D and five unsuccessful prototypes (one even causing a fire at the launch pad), we present a new product: an ELECTRIC screwdriver. Despite the name, screws are actually not yet supported, but bolts and nuts of any size are compatible. Besides, Jeb got exactly what he wanted!
		#KIS_electricScrewdriver_Part_tags = KIS EVA tool building portable cck-eva-items

		// ********** Part: KIS.evapropellant

		#KIS_evapropellant_Part_title = EVA-11 Fuel Canister
		#KIS_evapropellant_Part_manufacturer = Kerbal Inventory Systems
		#KIS_evapropellant_Part_description = After all EVA suits were equipped with maneuvering thrusters, Mission Control ran into an unexpected problem: crew members became so addicted to flying around with their jetpacks that they frequently exhausted their supplies of propellant! After an excessive number of rescue missions, every vessel was required to include a spare fuel tank, just in case. Now fellow crew members can save their reckless colleagues by replenishing their fuel supplies. If necessary, the tank can be recharged from the ship's propellant.
		#KIS_evapropellant_Part_tags = KIS EVA fuel portable cck-eva-items
		#KIS_evapropellant_Part_useName = Refuel

		// ********** Part: KIS.ghettoblaster

		#KIS_ghettoblaster_Part_title = Ghetto Blaster
		#KIS_ghettoblaster_Part_manufacturer = Kerbal Inventory Systems
		#KIS_ghettoblaster_Part_description = Long flights can be boring and sometimes even unbearable. To brighten up the life of our brave space explorers, our engineers have developed a special version of the cassette recorder: a tape recorder without a cassette! It always plays the same tune, thus completely eliminating any conflicts between crew members concerning musical preferences.
		#KIS_ghettoblaster_Part_tags = cck-eva-items

		// ********** Part: KIS.golfclub

		#KIS_golfclub_Part_title = Alpard Kerman's Golf Club
		#KIS_golfclub_Part_manufacturer = Kerbal Inventory Systems
		#KIS_golfclub_Part_description = Ballistic calculations are all well and good, but it is sometimes much better to just whack an object and see how it flies. Here is a nice long club, which can be used for this purpose. Always be sure to log your scientific observations, such has how many whacks it takes to move the object into an impact crater. Hey, the flags Jeb loves to place everywhere can even be used to mark the crater locations!
		#KIS_golfclub_Part_tags = cck-eva-items
		#KIS_golfclub_Part_useName = Swing

		// ********** Part: KIS.guide

		#KIS_guide_Part_title = KIS for Dummies
		#KIS_guide_Part_manufacturer = Kerbal Inventory Systems
		#KIS_guide_Part_description = We once conducted a study and discovered a curious fact: it turns out that nobody reads the instruction manual before flight, no matter how much we ask them to! However, if a problem does arise mid-flight, then of course they finally want to read the instructions! To meet this demand, our administration department has prepared a brief manual that you can consult during a mission. Jeb still claims that it's unnecessary, since he already knows everything and he's just going on missions for fun.
		#KIS_guide_Part_tags = KIS inventory building book portable cck-eva-items
		#KIS_guide_Part_useName = Read

		// ********** Part: KIS.guitar

		#KIS_guitar_Part_title = Davie Kerman's Guitar
		#KIS_guitar_Part_manufacturer = Kerbal Inventory Systems
		#KIS_guitar_Part_description = Sometimes, the only missing thing in outer space is... a guitar. This model is a North-Rope Strummin', the third most popular brand of guitars on Kerbin after Nos-Big and Red-Nef. Guitar picks sold separately.
		#KIS_guitar_Part_tags = cck-eva-items

		// ********** Part: KIS.taco

		#KIS_taco_Part_title = T.B. Kerman's Taco
		#KIS_taco_Part_manufacturer = Kerbal Inventory Systems
		#KIS_taco_Part_description = Beef, vegetables, and hot sauce in a tortilla. Everything our kerbonauts need for a zero G meal. Nobody seems to know just what the "T.B." stands for.
		#KIS_taco_Part_tags = cck-eva-items
		#KIS_taco_Part_useName = Eat

		// ********** Part: KIS.wrench

		#KIS_wrench_Part_title = BS-8 Utility Wrench
		#KIS_wrench_Part_manufacturer = Kerbal Inventory Systems
		#KIS_wrench_Part_description = Returning from another regular expedition, Jeb complained that during almost every flight, some parts would come loose and start flying around the cabin. Our engineers took this report very seriously. After performing extensive research, numerous experiments, and consuming several gallons of koffee, the problem was diagnosed, and a simple, yet elegant solution was found: a wrench! Now Jeb can fix all those loose parts, or even attach additional struts mid-flight.
		#KIS_wrench_Part_tags = KIS EVA tool building portable cck-eva-items

		// ********** Type: KIS.GUIUtils.VolumeLType, KSPDev Messages

		// Liter unit for a volume value.
		#kisLOC_99000 = \u0020L

		// ********** Type: KIS.KIS_Item, KSPDev Messages

		// The screen message to present when the item was attempted to equip, but the
		// relevant inventory slot has more than one item (stacked).
		#kisLOC_02000 = Cannot equip stacked items
		// The screen message to present when the item was attempted to equip, but its equip
		// slot is already taken by a carriable item.
		// Argument <<1>> is the name of the equip slot of the item.
		// Argument <<2>> is the name of the item being carried.
		#kisLOC_02001 = Cannot equip item, slot [<<1>>] already used for carrying <<2>>
		// The screen message to present when the item was attempted to equip, but a
		// specific kerbal trait (skill) is required to handle the item.
		// Argument <<1>> is the name of the required trait.
		#kisLOC_02002 = This item can only be used by a kerbal with the skill: <<1>>
		// The screen message to present when the item was attempted to be added to an
		// existing slot stack, but the resulted inventory volume would exceed the maximum
		// allowed volume.
		// Argument <<1>> is the excessive volume. Format: VolumeLType.
		#kisLOC_02003 = Max destination volume reached (+<<1>>)
		// The screen message to present when the item was attempted to be added to an
		// existing slot stack, but the item being added is currently equipped.
		#kisLOC_02004 = Cannot stack with equipped item

		// ********** Type: KIS.KISAddonPickup, KSPDev Messages

		// The action status to show in the tooltip when the player presses the re-dock
		// action key and the action is allowed.
		#kisLOC_01000 = Re-dock
		// The action status to show in the tooltip when the player presses the re-dock
		// action key and the action is not allowed.
		#kisLOC_01001 = Can't re-dock
		// The action status to show in the tooltip when the player presses the grab action
		// key while pointing on a root part, and the action is allowed.
		#kisLOC_01002 = Grab
		// The action status to show in the tooltip when the player presses the grab action
		// key while pointing on a child part, and the action is allowed.
		#kisLOC_01003 = Detach & Grab
		// The action status to show in the tooltip when the player presses the grab action
		// key and the action is not allowed.
		#kisLOC_01004 = Can't grab
		// The action status to show in the tooltip when the player presses the detach
		// action key and the action is allowed.
		#kisLOC_01005 = Detach
		// The action status to show in the tooltip when the player presses the detach
		// action key when a statically attached (to the ground) part is targeted, and the
		// action is allowed.
		#kisLOC_01006 = Detach from ground
		// The action status to show in the tooltip when the player attempts to detach a
		// part that cannot be detached for any reason.
		#kisLOC_01007 = Can't detach
		// The action status to show in the tooltip when the player attempts to attach a
		// part that cannot be attached for any reason.
		#kisLOC_01008 = Can't attach
		// The action status to show in the tooltip when the player attempts to grab or move
		// a too heavy part or assembly.
		#kisLOC_01009 = Too heavy
		// The action status to show in the tooltip when the player attempts to grab or move
		// a part or assembly which is too far from the acting part (e.g. an EVA kerbal).
		#kisLOC_01010 = Too far
		// The action status to show in the tooltip when the action cannot complete due to
		// the unexpected reasons.
		#kisLOC_01011 = Not supported
		// The action status to show in the tooltip when the requested action requires an
		// equipped tool on the EVA kerbal, but there was none.
		#kisLOC_01012 = Tool needed
		// The action status to show in the tooltip when the re-dock action is in the
		// process.
		// Argument <<1>> is a name of the vessel being re-docked.
		// Argument <<2>> is the total mass of the vessel. Format: MassType.
		#kisLOC_01013 = Vessel: <<1>>\nMass: <<2>>
		// The action status to show in the tooltip when a root part of the vessel is
		// targeted for an action.
		#kisLOC_01014 = Root part
		// The tooltip help string in case of the current action is dropping of a grabbed
		// part.
		// Argument <<1>> is the name of the node at which the part will be acted.
		#kisLOC_01015 = Drop (<<1>>)
		// The tooltip help string in case of the current action is attaching of a grabbed
		// part.
		// Argument <<1>> is the name of the node at which the part will be acted.
		#kisLOC_01016 = Attach (<<1>>)
		// The tooltip help string in case of the current action is re-docking of a grabbed
		// vessel.
		// Argument <<1>> is the name of the vessel which will be re-docked.
		#kisLOC_01017 = Re-dock (<<1>>)
		// The tooltip help string in case of the current action is mounting a KIS item.
		#kisLOC_01018 = Mount
		// The tooltip help string to display when the re-dock action is selected but the
		// mouse cursor is not pointing to a valid docked vessel.
		#kisLOC_01019 = No docked vessel found
		// The tooltip help string to display when the re-dock action selected but the mouse
		// cursor is not pointing any part.
		#kisLOC_01020 = Select a vessel
		// The tooltip help string to display when the player attempts to grab a kerbal
		#kisLOC_01021 = Kerbonauts can move themselves using jetpacks.
		// The tooltip help string to display when the player attempts to grab a too heavy
		// object.
		// Argument <<1>> is the total mass of the target object. Format: MassType.
		// Argument <<2>> is the maximum allowed mass. Format: MassType.
		#kisLOC_01022 = Bring more kerbals [<<1>> > <<2>>]
		// The tooltip help string to display when the player attempts to grab an object
		// which is too far away.
		#kisLOC_01023 = Move closer to the part
		// The tooltip help string to display when the player attempts to perform an attach
		// action without the proper tool equipped.
		#kisLOC_01024 = This part can't be attached without a tool
		// The tooltip help string to display when the player attempts to perform a detach
		// action without the proper tool equipped.
		#kisLOC_01025 = This part can't be detached without a tool
		// The tooltip help string to display when the player attempts to perform a detach
		// action on a ground attached part without the proper tool equipped.
		#kisLOC_01026 = This part can't be detached from the ground without a tool
		// The tooltip help string in the case when the action cannot complete due to the
		// unexpected reasons.
		#kisLOC_01027 = The function is not supported on this part
		// The tooltip help string in the case when an attach action is attempted on a part
		// which is not designed for that.
		#kisLOC_01028 = Attach function is not supported on this part
		// The tooltip help string to display when a single part was targeted for an action.
		// Argument <<1>> is a name of the target part.
		#kisLOC_01029 = <<1>>
		// The tooltip help string to display when multiple parts was targeted for an
		// action.
		// Argument <<1>> is a name of the target part.
		// Argument <<2>> is the number of the children parts attached to the target.
		#kisLOC_01030 = <<1>>\nAttached parts: <<2>>
		// The tooltip help string for the key bindings to adjust the part's roll.
		// Argument <<1>> is the "adjust left" key name.
		// Argument <<2>> is the "adjust right" key name
		#kisLOC_01031 = [<<1>>][<<2>>]
		// The tooltip help string for the key bindings to adjust the part's pitch.
		// Argument <<1>> is the "adjust left" key name.
		// Argument <<2>> is the "adjust right" key name
		#kisLOC_01032 = [<<1>>][<<2>>]
		// The tooltip help string for the key bindings to adjust the part's yaw.
		// Argument <<1>> is the "adjust left" key name.
		// Argument <<2>> is the "adjust right" key name
		#kisLOC_01033 = [<<1>>][<<2>>]
		// The tooltip help string for the key bindings to adjust the part's rotation.
		// Argument <<1>> is the keys for the roll adjustment.
		// Argument <<2>> is the keys for the pitch adjustment.
		// Argument <<3>> is the keys for the yaw adjustment.
		#kisLOC_01034 = <<1>>/<<2>>/<<3>> to rotate
		// The tooltip help string for the key binding to reset all the roll and offset
		// adjustments.
		#kisLOC_01035 = [<<1>>] to reset orientation & position
		// The tooltip help string for the key binding to change the node snap mode.
		#kisLOC_01036 = [<<1>>] to change node
		// The tooltip help string for the key bindings to adjust the part's offset.
		// Argument <<1>> is the "adjust up" key name.
		// Argument <<2>> is the "adjust down" key name
		#kisLOC_01037 = [<<1>>]/[<<2>>] to move up/down
		// The tooltip help string for the key binding to switch to the attach mode.
		#kisLOC_01038 = [<<1>>] to attach
		// The tooltip help string for the key binding to cancel the operation.
		#kisLOC_01039 = [Escape] to cancel

		// ********** Type: KIS.KISAddonPointer, KSPDev Messages

		// The message to present when the selected action cannot be completed given the
		// currently grabbed part/assembly and the target at which the mouse cursor is
		// pointing.
		#kisLOC_03000 = Target object is not allowed!
		// The message to present when the selected action cannot be completed due to the
		// source and the target are the same objects.
		#kisLOC_03001 = Cannot attach on itself!
		// The message to present when a non-mountable object is attempted to be mounted.
		#kisLOC_03002 = This part is not allowed on the mount!
		// The message to present when the source object is attempted to be attached to the
		// target's surface of a part which doesn't allow this mode.
		#kisLOC_03003 = Target part doesn't allow surface attach!
		// The message to present when the source object is attempted to be attached to the
		// target's surface, but the selected node on the source is not 'surface'.
		#kisLOC_03004 = This node cannot be used for surface attach!
		// The message to present when the acting kerbal is too far from the part he's
		// trying to act on (source part).
		// Argument <<1>> is the actual distance between the kerbal and the source part.
		// Format: DistanceType.
		// Argument <<2>> is the maximum allowed distance. Format: DistanceType.
		#kisLOC_03005 = Too far from source: <<1>> > <<2>>
		// The message to present when the acting kerbal is too far from the point of the
		// actual action (drop or attach).
		// Argument <<1>> is the actual distance between the kerbal and the target part.
		// Format: DistanceType.
		// Argument <<2>> is the maximum allowed distance. Format: DistanceType.
		#kisLOC_03006 = Too far from target: <<1>> > <<2>>
		// The message to present when a source object is attempted to be attached to a
		// target part which is not allowed for this. This message is shown when the source
		// object can only attach to a very specific set of the vessel's part (e.g. during
		// the re-docking).
		// Argument <<1>> is the name of the target part.
		#kisLOC_03007 = Cannot attach to part: <<1>>
		// The message to present when a 'change attach node' action is requested, but the
		// source part has only one node
		#kisLOC_03008 = This part has only one attach node!

		// ********** Type: KIS.ModuleKISInventory, KSPDev Messages

		// The message to present when 'use' key is pressed, but no item is equipped in the
		// right hand of the EVA kerbal.
		#kisLOC_00000 = Cannot use equipped item because nothing is equipped
		// The message to present when EVA kerbal enters a pod which doesn't have KIS
		// inventory.
		#kisLOC_00001 = Pod <<1>> doesn't have personal inventory space
		// The message to present when EVA kerbal tries to put into inventory an assembly of
		// multiple parts.
		// Argument <<1>> is the number of the children parts attached to the part being
		// dragged.
		#kisLOC_00002 = Cannot put an assembly into inventory: <<1>> part(s) attached
		// The message to present when an item being dragged into an inventory which doesn't
		// have enough free space.
		// Argument <<1>> is a value of type VolumeLType which specifies the volume which is
		// attempted to be moved.
		// Argument <<2>> is a value of type VolumeLType which specifies the exceeding
		// volume over the max inventory capacity.
		#kisLOC_00003 = Max destination volume reached: <<1>> (+<<2>>)
		// The message to present when a storage, which is being carried on a back of an EVA
		// kerbal, is attempted to be accessed.
		#kisLOC_00004 = This storage is not accessible while carried!
		// The message to present when an inventory which cannot be accessed from EVA is
		// attempted to be opened by an EVA kerbal.
		#kisLOC_00005 = This storage is not accessible from the outside!
		// The message to present when an inventory which cannot be accessed from inside the
		// vessel is attempted to be accessed while the active vessel is no an EVA kerbal.
		#kisLOC_00006 = This storage is not accessible from the inside!
		// The message to present when a split action is attempted on an inventory, but
		// there are no empty slots available to fit the new pack.
		#kisLOC_00009 = Inventory is full, cannot split!
		// The message to present when an item, designed to be carried by an EVA kerbal, is
		// attempted to be put into a pod's seat inventory.
		#kisLOC_00010 = Carriable items cannot be stored in the seat's inventory
		// The message to present when an item is attempted to be placed on an EVA kerbal,
		// but there is another item already being carried.
		#kisLOC_00011 = Another part is already carried
		// The text to show in an inventory window in the editor to highlight the fact that
		// the items added there will only be available in the flight if the seat is
		// occupied at the launch.
		#kisLOC_00012 = The seat must be crewed at launch to enable inventory
		// The name of the context menu item that removes kerbal's helmet if the environment
		// conditions allow it.
		#kisLOC_00013 = Remove Helmet
		// The name of the context menu item that puts the kerbal's helmet back.
		#kisLOC_00014 = Put On Helmet
		// The title of the window that represents an open pod's inventory in the editor.
		// Argument <<1>> is a name of the part that holds the inventory.
		// Argument <<2>> is a number of the seat to which the inventory belongs.
		#kisLOC_00015 = <<1>> | Seat <<2>>
		// The title of the window that represents an open kerbal's inventory.
		// Argument <<1>> is a name of the part that holds the inventory.
		// Argument <<2>> is a name of the kerbal.
		#kisLOC_00016 = <<1>> | <<2>>
		// The title of the window that represents an open parts's inventory in the flight.
		// This title is only used when the inventory has a custom name.
		// Argument <<1>> is a name of the part that holds the inventory.
		// Argument <<2>> is a custom name of the inventory.
		#kisLOC_00017 = <<1>> | <<2>>
		// The title of the window that represents a context menu for a specific item in the
		// inventory.
		#kisLOC_00019 = Action
		// The caption of the button that accepts the changed inventory name. This button is
		// vary narrow, so keep the text as short as possible.
		#kisLOC_00020 = OK
		// The caption of the button that shows an input field to enter a custom name for an
		// inventory.
		#kisLOC_00021 = Set name
		// The caption of the button that closes the opened inventory dialog.
		#kisLOC_00022 = Close
		// The caption of the button that triggers the unequip action on the item in the
		// inventory. The button is shown in a context menu of the selected item.
		#kisLOC_00023 = Unequip
		// The caption of the button that triggers the equip action on the item in the
		// inventory. The button is shown in a context menu of the selected item.
		#kisLOC_00024 = Equip
		// The caption of the button that triggers the drop action on the item in the
		// inventory. The button is shown in a context menu of the selected item.
		#kisLOC_00025 = Drop
		// The caption of the button that extracts the specified number of items from the
		// selected inventory slot, and moves them into a new slot.
		// Argument <<1>> is the number of items to extract.
		#kisLOC_00026 = Split (<<1>>)
		// The text to show in the context menu of the selected inventory item that tells
		// how many items are in the slot.
		// Argument <<1>> is the number of items in the slot.
		#kisLOC_00027 = Quantity: <<1>>
		// The text to show in the context menu of the selected inventory item that tells
		// that no actions can be done on the item(s) in the slot.
		#kisLOC_00028 = No action
		// The name of the part's menu item that opens the inventory for a pod's seat.
		// Argument <<1>> is the number of seat.
		#kisLOC_00029 = Seat <<1>> inventory
		// The name of the part's menu item that opens the inventory of a specific kerbal.
		// Argument <<1>> is the first name of the kerbal.
		#kisLOC_00030 = <<1>>`s inventory
		// The name of the part's menu item that opens the associated inventory. The "part"
		// can be a kerbal.
		#kisLOC_00031 = Inventory
		// The name of the part's menu item that opens the associated inventory with a
		// custom name. The "part" can be a kerbal.
		// Argument <<1>> is a custom name of the inventory.
		#kisLOC_00032 = Inventory | <<1>>
		// The text to display in the inventory slot background to tell if the item is being
		// carried by the kerbal.
		#kisLOC_00033 = Carried
		// The text to display in the inventory slot background to tell if the item is being
		// equipped by the kerbal.
		#kisLOC_00034 = Equip.
		// The text to display in the inventory slot background to identify it.
		// Argument <<1>> is the number of the slot.
		#kisLOC_00035 = <<1>>
		// The text to display in the inventory slot background to tell ho many items are
		// stacked.
		// Argument <<1>> is the number of the items in the slot.
		#kisLOC_00036 = x<<1>>
		// The volume stat of the inventory in the main inventory window.
		// Argument <<1>> is the occupied volume of the inventory of type VolumeLType.
		// Argument <<2>> is the maximum volume of the inventory of type VolumeLType.
		#kisLOC_00037 = Volume: <<1>> / <<2>>
		// The total part mass in the main inventory window. It includes the combined mass
		// of all the items in the inventory.
		// Argument <<1>> is the total mass of type MassType.
		#kisLOC_00038 = Mass: <<1>>
		// The total part cost in the main inventory window. It includes the combined cost
		// of all the items in the inventory.
		// Argument <<1>> is the total cost of type CostType.
		#kisLOC_00039 = Cost: <<1>>
		// The volume of a single item in the inventory slot. It's presented in a tooltip
		// window.
		// Argument <<1>> is the volume of type VolumeLType.
		#kisLOC_00040 = Volume: <<1>>
		// The mass of a single item in the inventory slot without the resources or the
		// contents. It's presented in a tooltip window.
		// Argument <<1>> is the mass of type MassType.
		#kisLOC_00041 = Dry mass: <<1>>
		// The mass of the resources in a single item in the inventory slot. It's presented
		// in a tooltip window.
		// Argument <<1>> is the mass of type MassType.
		#kisLOC_00042 = Resource mass: <<1>>
		// The cost of a single item in the inventory slot including the cost of the
		// resources. It's presented in a tooltip window.
		// Argument <<1>> is the cost of type CostType.
		#kisLOC_00043 = Cost: <<1>>
		// The cost of the contents of a single item in the inventory slot. It's presented
		// in a tooltip window.
		// Argument <<1>> is the cost of type CostType.
		#kisLOC_00044 = Contents cost: <<1>>
		// The mass of the contents of a single item in the inventory slot. It's presented
		// in a tooltip window.
		// Argument <<1>> is the mass of type MassType.
		#kisLOC_00045 = Contents mass: <<1>>
		// The total cost of the items in the inventory slot. It's presented in a tooltip
		// window.
		// Argument <<1>> is the cost of type CostType.
		#kisLOC_00046 = Total cost: <<1>>
		// The total volume of the items in the inventory slot. It's presented in a tooltip
		// window.
		// Argument <<1>> is the volume of type VolumeLType.
		#kisLOC_00047 = Total volume: <<1>>
		// The total mass of the items in the inventory slot. It's presented in a tooltip
		// window.
		// Argument <<1>> is the mass of type MassType.
		#kisLOC_00048 = Total mass: <<1>>
		// The message to present in the tooltip window when the item has no resources.
		#kisLOC_00049 = Part has no resources
		// The information for the key that activates the equipped item. It's presented in a
		// tooltip window.
		// Argument <<1>> is the string name of the key as set in the settings file.
		#kisLOC_00051 = Press [<<1>>] to use (equipped)
		// The template to present the resources reserve in the item. It's presented in a
		// tooltip window.
		// Argument <<1>> is the resource name of type ResourceType.
		// Argument <<2>> is the current reserve of the resource.
		// Argument <<3>> is the maximum amount of the resource.
		#kisLOC_00052 = <<1>>: <<2>> / <<3>>
		// The template to present the science data stored in the item. It's presented in a
		// tooltip window.
		// Argument <<1>> is the science title.
		// Argument <<2>> is the science data amount.
		// Argument <<3>> is the value of the science data.
		#kisLOC_00053 = <<1>> (Data=<<2>>, Value=<<3>>)
		// The message to present in the tooltip window when the item has no science data.
		#kisLOC_00054 = Part has no science data
		// The title of the module to present in the editor details window.
		#kisLOC_00055 = KIS Inventory
		// The info string in the editor for the maximum allowed volume of the inventory.
		// Argument <<1>> is the volume of type VolumeLType
		#kisLOC_00056 = Max Volume: <<1>>
		// The info string in the editor to present if kerbals can access the items in the
		// inventory when staying inside the vessel.
		#kisLOC_00057 = <color=#00FFFF>Can be accessed from inside</color>
		// The info string in the editor to present if kerbals cannot access the items in
		// the inventory when staying inside the vessel.
		#kisLOC_00058 = <color=#FFA500>Cannot be accessed from inside</color>
		// The info string in the editor to present if kerbals can access the items in the
		// inventory when going EVA.
		#kisLOC_00059 = <color=#00FFFF>Can be accessed from EVA</color>
		// The info string in the editor to present if kerbals cannot access the items in
		// the inventory when going EVA.
		#kisLOC_00060 = <color=#FFA500>Cannot be accessed from EVA</color>

		// ********** Type: KIS.ModuleKISItem, KSPDev Messages

		// The title of the module to present in the editor details window.
		#kisLOC_06000 = KIS Item
		// The info string to show in the editor to state that the item can be equipped on
		// the kerbal at the designated equip slot.
		// Argument <<1>> is a the slot name.
		#kisLOC_06001 = Equips on: <<1>>
		// The info string to show in the editor to state that the item can be carried by
		// the kerbal at the designated equip slot.
		// Argument <<1>> is a the slot name.
		#kisLOC_06002 = Carried on: <<1>>
		// The name for the left hand equip slot.
		#kisLOC_06003 = left hand
		// The name for the right hand equip slot.
		#kisLOC_06004 = right hand
		// The name for the jetpack equip slot.
		#kisLOC_06005 = jetpack
		// The name for the eye equip slot.
		#kisLOC_06006 = eyes
		// The name for the helmet equip slot.
		#kisLOC_06007 = helmet
		// The info string to show in the editor to state that the item can be attached to
		// another part without a need of any attach tool.
		#kisLOC_06008 = Attaches to parts without a tool
		// The info string to show in the editor to state that the item CANNOT be attached
		// to another part.
		#kisLOC_06009 = <color=orange>Cannot be attached to other parts</color>
		// The info string to show in the editor to state that the item can be attached to
		// the surface without a need of any attach tool.
		#kisLOC_06010 = Attaches to surface without a tool
		// The info string to show in the editor to state that the item can be attached to
		// the surface, but the appropriate tool will be needed.
		#kisLOC_06011 = Tool required to surface-attach
		// The info string to show in the editor to specify with what force the part will be
		// attached to the surface (if such attachment is allowed).
		#kisLOC_06012 = Surface attachment strength: <<1>>
		// The info string to show in the editor to state that the item can be carried by
		// the kerbal. I.e. it attaches on the kerbal's model and doesn't take space in the
		// personal inventory.
		#kisLOC_06013 = Carried by kerbals
		// The info string to show in the editor to state that the item can be equipped by
		// the kerbal. I.e. it attaches on the kerbal's model and reacts to the 'use'
		// hotkey.
		#kisLOC_06014 = Equippable item

		// ********** Type: KIS.ModuleKISItemAttachTool, KSPDev Messages

		// The title of the module to present in the editor details window.
		#kisLOC_04000 = KIS Attach Tool
		// The info message to present in the editor's details window to denote that this
		// tool can attach parts at the stack nodes.
		#kisLOC_04001 = <color=#00FFFF>Can attach to the stack nodes</color>
		// The info message to present in the editor's details window to denote that this
		// tool can attach the parts at the surface of another part, but not at the stack
		// nodes.
		#kisLOC_04002 = <color=orange>Can only attach to a part's surface</color>

		// ********** Type: KIS.ModuleKISItemBomb, KSP Events

		// The name of the context menu item to activate the bomb.
		#kisLOC_05009 = Activate
		// The name of the context menu item to open the bomb GUI setup window.
		#kisLOC_05010 = Setup

		// ********** Type: KIS.ModuleKISItemBomb, KSPDev Messages

		// The title of the module to present in the editor details window.
		#kisLOC_05000 = KIS Bomb
		// The info message to present in the editor's details window for the maximum radius
		// of explosion of the bomb.
		// Argument <<1>> is the radius. Format: DistanceType.
		#kisLOC_05001 = Max explosion radius: <<1>>
		// The title of the GUI window to setup the bomb.
		#kisLOC_05002 = Explosive - Setup
		// The GUI section title for setting up the explosion timer.
		#kisLOC_05003 = Timer
		// The string that displays number of seconds till the bomb trigger.
		#kisLOC_05004 = <<1>> s
		// The GUI section title for setting up the explosion area.
		#kisLOC_05005 = Explosion radius
		// The string that displays current setting of the explosion radius.
		// Argument <<1>> is the current radius. Format: DistanceType.
		// Argument <<2>> is the maximum allowed radius for the part. Format: DistanceType.
		#kisLOC_05006 = <<1>> / <<2>>
		// The caption on the button that starts the timer. It cannot be stopped!
		#kisLOC_05007 = ACTIVATE (cannot be undone)
		// The caption on the button that closes the setup menu without starting the timer
		#kisLOC_05008 = Close
		// The message to display when the bomb is activated. It's shown only once and
		// doesn't update as the bomb is ticking.
		// Argument <<1>> is the timer setting in seconds.
		#kisLOC_05011 = You have <<1>> seconds to escape!

		// ********** Type: KIS.ModuleKISItemBook, KSPDev Messages

		// The title of the module to present in the editor details window.
		#kisLOC_07000 = KIS Guide
		// The info message to present in the editor's details window to designate the fact
		// that this item is for the learning purposes only.
		#kisLOC_07001 = The last resort manual
		// The title for the window that shows the guide pages.
		#kisLOC_07002 = Reader
		// The caption on the button that navigates to the previous page.
		#kisLOC_07003 = Previous page
		// The caption on the button that navigates to the next page.
		#kisLOC_07004 = Next page
		// The caption on the button that closes the guide window.
		#kisLOC_07005 = Close
		// The string in the reader window that displays the current page number.
		// Argument <<1>> is the number of the current page.
		// Argument <<2>> is the total number of the pages.
		#kisLOC_07006 = Page <<1>> / <<2>>

		// ********** Type: KIS.ModuleKISItemEvaPropellant, KSPDev Messages

		// The message to present when the jetpack is attempted to be refilled, but its'
		// already full.
		#kisLOC_08000 = The jetpack is full. No need to refill
		// The message to present when the EVA kerbals has attempted to refill the jetpack,
		// but the tank is empty.
		#kisLOC_08001 = The canister is empty! Cannot refuel the jetpack
		// The message to present when a non-full tank has successfully refilled from the
		// pod's resource.
		#kisLOC_08002 = Fuel canister refilled
		// The message to present when the EVA kerbals has attempted to refill the jetpack,
		// but the tank didn't have enough fuel to fill the jetpack to full.
		#kisLOC_08003 = Not enough fuel in the canister. The jetpack is partially refueled
		// The message to present when the EVA kerbals has attempted to refill the jetpack,
		// and the jetpack has successfully refilled to full.
		#kisLOC_08004 = Jetpack fully refueled

		// ********** Type: KIS.ModuleKISItemSoundPlayer, KSPDev Messages

		// The name of the context menu item to start the playback.
		#kisLOC_09000 = Play
		// The name of the context menu item to stop the playback.
		#kisLOC_09001 = Stop

		// ********** Type: KIS.ModuleKISPartMount, KSP Actions

		// The name of the action to release the mounted part.
		#kisLOC_10001 = Release

		// ********** Type: KIS.ModuleKISPartMount, KSP Events

		// The name of the context menu item to release the mounted part.
		#kisLOC_10000 = Release

		// ********** Type: Patches localization

		// Caption for the editor category.
		#kisLOC_99001 = EVA Items
	}
}
